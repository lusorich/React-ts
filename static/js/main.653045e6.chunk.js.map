{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/styles/navBar.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/styles/notFound.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/AlternativeGreeting.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/UpperJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","wrapper","item","to","activeClassName","active","Message","props","styles","message","message__avatar","src","avatar","width","height","alt","message__title","name","message__text","message__time","time","AlternativeMessage","chars","map","char","i","key","messageData","altText","HW1","SuperButton","red","restProps","finalClassName","default","Affair","task","affair","priority","task__title","task__title_high","task__title_middle","task__title_low","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","btns","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","elem","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","success","count","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","AlternativeGreeting","purchases","plusCount","countNumber","defaultPurchases","v1","HW3","setUsers","setPurchases","newUsers","push","id","newPurchases","forEach","purchase","console","log","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","PreJunior","Junior","UpperJunior","Error404","title","desc","symb","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,iBAAmB,kCAAkC,mBAAqB,oCAAoC,gBAAkB,iCAAiC,KAAO,sBAAsB,UAAY,2BAA2B,QAAU,yBAAyB,YAAc,6BAA6B,KAAO,wB,kBCAvXD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,wBAAwB,OAAS,yB,iBCAzFD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,QAAU,0BAA0B,IAAM,sBAAsB,MAAQ,wBAAwB,YAAc,gC,iBCApMD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,gBAAkB,iCAAiC,eAAiB,gCAAgC,cAAgB,+BAA+B,cAAgB,iC,kBCAxND,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,KAAO,uBAAuB,KAAO,yB,iBCA3HD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,gBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,oBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,iBCAxBD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,sB,qLCarCC,MAVf,WACI,OACI,yBAAKC,UAAWC,IAAEC,SACd,kBAAC,IAAD,CAASF,UAAWC,IAAEE,KAAMC,GAAG,cAAcC,gBAAiBJ,IAAEK,QAAhE,cACA,kBAAC,IAAD,CAASN,UAAWC,IAAEE,KAAMC,GAAG,UAAUC,gBAAiBJ,IAAEK,QAA5D,UACA,kBAAC,IAAD,CAASN,UAAWC,IAAEE,KAAMC,GAAG,gBAAgBC,gBAAiBJ,IAAEK,QAAlE,kB,wBCYGC,MAXf,SAAiBC,GACb,OACI,yBAAKR,UAAWS,IAAOC,SACnB,yBAAKV,UAAWS,IAAOE,gBAAiBC,IAAKJ,EAAMK,OAAQC,MAAM,KAAKC,OAAO,KAAKC,IAAI,yCACtF,wBAAIhB,UAAWS,IAAOQ,gBAAiBT,EAAMU,MAC7C,uBAAGlB,UAAWS,IAAOU,eAAgBX,EAAME,SAC3C,0BAAMV,UAAWS,IAAOW,eAAgBZ,EAAMa,QCE3CC,MAVf,SAA4Bd,GACxB,OACI,6BACKA,EAAMe,MAAMC,KAAI,SAACC,EAAMC,GACpB,OAAQ,0BAAMC,IAAKD,GAAID,QCRjCG,EACM,qFADNA,EAEI,QAFJA,EAGO,uBAHPA,EAII,QAGJC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,KAoBtBC,MAlBf,WACI,OACI,6BACI,6BADJ,cAGI,kBAAC,EAAD,CACIjB,OAAQe,EACRV,KAAMU,EACNlB,QAASkB,EACTP,KAAMO,IAEV,6BACA,kBAAC,EAAD,CAAoBL,MAAOM,IAC3B,+B,gDCAGE,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKhC,EAGR,EAHQA,UACFiC,EAEN,mCACKC,EAAc,UAAMF,EAAM/B,IAAE+B,IAAM/B,IAAEkC,QAAtB,YAAiCnC,GAErD,OACI,0CACIA,UAAWkC,GACPD,KCODG,MAhBf,SAAgB5B,GAGZ,OACI,yBAAKR,UAAWC,IAAEoC,MACd,0BAAMrC,UAAqC,SAA1BQ,EAAM8B,OAAOC,SAAb,UAAsCtC,IAAEuC,YAAxC,YAAuDvC,IAAEwC,kBAC5C,WAA1BjC,EAAM8B,OAAOC,SAAb,UAAwCtC,IAAEuC,YAA1C,YAAyDvC,IAAEyC,oBAC7B,QAA1BlC,EAAM8B,OAAOC,SAAb,UAAqCtC,IAAEuC,YAAvC,YAAsDvC,IAAE0C,iBAAxD,UACO1C,IAAEuC,cACZhC,EAAM8B,OAAOpB,MAElB,kBAAC,EAAD,CAAa0B,QAVE,WAAQpC,EAAMqC,qBAAqBrC,EAAM8B,OAAOQ,OAU/D,OCkBGC,MA7Bf,SAAiBvC,GACb,IAAMwC,EAAgBxC,EAAMyC,KAAKzB,KAAI,SAAC0B,GAAD,OACjC,kBAAC,EAAD,CACIvB,IAAKuB,EAAEJ,IACPR,OAAQY,EACRL,qBAAsBrC,EAAMqC,0BASpC,OACI,yBAAK7C,UAAWC,IAAEC,SAEb8C,EAED,yBAAKhD,UAAWC,IAAEkD,MACd,kBAAC,EAAD,CAAaP,QAXV,WAAQpC,EAAM4C,UAAU,SAW3B,OACA,kBAAC,EAAD,CAAaR,QAXT,WAAQpC,EAAM4C,UAAU,UAW5B,QACA,kBAAC,EAAD,CAAaR,QAXP,WAAQpC,EAAM4C,UAAU,YAW9B,UACA,kBAAC,EAAD,CAAaR,QAXV,WAAQpC,EAAM4C,UAAU,SAW3B,UCtBVC,EAAoC,CACtC,CAAEP,IAAK,EAAG5B,KAAM,QAASqB,SAAU,QACnC,CAAEO,IAAK,EAAG5B,KAAM,QAASqB,SAAU,OACnC,CAAEO,IAAK,EAAG5B,KAAM,QAASqB,SAAU,OACnC,CAAEO,IAAK,EAAG5B,KAAM,OAAQqB,SAAU,QAClC,CAAEO,IAAK,EAAG5B,KAAM,aAAcqB,SAAU,WA4C7Be,MA1Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAGLO,EAjBY,SAACH,EAA4BE,GAC/C,MAAe,QAAXA,EAAyBF,EACVA,EAAQE,QAAO,SAACE,GAC/B,OAAOA,EAAKrB,WAAamB,KAcLG,CAAcL,EAASE,GAG/C,OACI,6BACI,6BADJ,cAKI,kBAAC,EAAD,CACIT,KAAMU,EACNP,UAAWA,EACXP,qBAXiB,SAACC,GAAD,OAAiBW,EAX7B,SAACD,EAA4BV,GAC9C,OAAOU,EAAQE,QAAO,SAAAE,GAClB,OAAOA,EAAKd,MAAQA,KASiCgB,CAAaN,EAASV,OAcvE,6BAGA,+B,0CCCGiB,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACArE,EAIH,EAJGA,UAAWsE,EAId,EAJcA,cAERrC,EAEN,6GAeKsC,EAAkB,UAAMtE,IAAEoE,MAAR,YAAiBC,GAAgC,IACnEE,EAAmB,UAAKvE,IAAEwE,WAAa,KAAOJ,EAAQpE,IAAEyE,WAAa1E,IAE3E,OACI,oCACI,yCACIgE,KAAM,OACNC,SArBa,SAACU,GACtBV,GACGA,EAASU,GAEZT,GAAgBA,EAAaS,EAAEC,cAAcC,QAkBrCV,WAhBe,SAACQ,GACxBR,GAAcA,EAAWQ,GAEf,UAAVA,EAAEhD,KACCyC,GACAA,KAYKpE,UAAWwE,GAEPvC,IAEPoC,GAAS,0BAAMrE,UAAWuE,GAAqBF,KCnB7CS,EAnB+B,SAAC,GAEzC,IADA5D,EACD,EADCA,KAAM6D,EACP,EADOA,gBAAiBC,EACxB,EADwBA,QAASX,EACjC,EADiCA,MAAOY,EACxC,EADwCA,WAEtBZ,EAAQpE,IAAEoE,MAAQpE,IAAEiF,QAEvC,OACI,yBAAKlF,UAAWC,IAAEC,SACd,kBAAC,EAAD,CACQ2E,MAAO3D,EACP+C,SAAUc,EACVV,MAAOA,IAEf,8BAAOA,GACP,kBAAC,EAAD,CAAazB,QAASoC,GAAtB,OACA,0BAAMhF,UAAWC,IAAEkF,OAAQF,KCmBxBG,EAlCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClE/B,mBAAiB,IADiD,mBACnFrC,EADmF,KAC7EqE,EAD6E,OAEhEhC,mBAAiB,IAF+C,mBAEnFc,EAFmF,KAE5EmB,EAF4E,KAqBpFP,EAAaI,EAAMI,OAEzB,OACI,kBAAC,EAAD,CACIvE,KAAMA,EACN6D,gBAtBgB,SAACJ,GACjBA,EAAEC,cAAcC,MAAMa,OACtBH,EAAQZ,EAAEC,cAAcC,MAAMa,QAE9BH,EAAQ,KAmBRP,QAhBQ,WACR9D,GACAoE,EAAgBpE,GAChByE,MAAM,SAAD,OAAUzE,IACfsE,EAAS,KAETA,EAAS,UAWTnB,MAAOA,EACPY,WAAYA,KCNTW,EA3BiD,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,UACzE,OACI,6BACI,4BAQQD,EAAUrE,KAAI,SAAAoC,GAEV,OACI,wBAAIjC,IAAKiC,EAAKd,KACV,8BAAOc,EAAK1C,MACZ,0BAAMlB,UAAWC,IAAE8F,aAAcnC,EAAKuB,OACtC,kBAAC,EAAD,CAAavC,QALA,WAAQkD,EAAUlC,EAAKd,OAKpC,Y,QCV1BkD,EAAyC,CAAC,CAC5ClD,IAAKmD,cACL/E,KAAM,QACNiE,MAAO,GACR,CACCrC,IAAKmD,cACL/E,KAAM,SACNiE,MAAO,GACR,CACCrC,IAAKmD,cACL/E,KAAM,QACNiE,MAAO,IAqDIe,MAjDf,WAAgB,IAAD,EACe3C,mBAA0B,IADzC,mBACJ8B,EADI,KACGc,EADH,OAEuB5C,mBAA+ByC,GAFtD,mBAEJH,EAFI,KAEOO,EAFP,KAiCX,OACI,6BACI,6BADJ,cAKI,kBAAC,EAAD,CAAmBf,MAAOA,EAAOC,gBAnCjB,SAACpE,GAErB,IACMmF,EAAQ,CADE,CAAEvD,IAAKmD,cAAM/E,KAAMA,IACrB,mBAAgBmE,IAKdA,EACNiB,KAAK,CAAExD,IAAKmD,cAAM/E,KAAMA,IAElCiF,EAASE,MA0BL,6BAEC,kBAAC,EAAD,CAAqBR,UAAWA,EAAWC,UAzBlC,SAACS,GAKf,IAAMC,EAAeX,EACrBW,EAAaC,SAAQ,SAACC,GACdA,EAAS5D,MAAQyD,IACjBG,EAASvB,OAAS,MAG1BwB,QAAQC,IAAIJ,GACZJ,EAAa,YAAII,OAcb,+B,kCCjCGK,EAhCyC,SAAC,GASpD,EAPG7C,KAOF,IANEC,EAMH,EANGA,SAAU6C,EAMb,EANaA,gBACV9G,EAKH,EALGA,UACA+G,GAIH,EALczC,cAKd,EAJGyC,UAEG9E,EAEN,4FAOKuC,EAAmB,UAAMvE,IAAE+G,SAAR,YAAoBhH,GAAwB,IAErE,OACI,+BACI,yCACIgE,KAAM,WACNC,SAZa,SAACU,GAEtBV,GAAYA,EAASU,GACrBmC,GAAmBA,EAAgBnC,EAAEC,cAAcqC,UAU3CjH,UAAWwE,GAEPvC,IAEP8E,GAAY,0BAAM/G,UAAWC,IAAEqE,eAAgByC,KC2B7CG,MA3Df,WAAgB,IAAD,EACa3D,mBAAiB,IAD9B,mBACJ4D,EADI,KACEC,EADF,KAEL/C,EAAQ8C,EAAO,GAAK,QACpBE,EAAY,WACVhD,EACAsB,MAAM,gFAENA,MAAMwB,IAPH,EAWmB5D,oBAAkB,GAXrC,mBAWJ0D,EAXI,KAWKK,EAXL,KAcX,OACI,6BACI,6BADJ,cAII,yBAAKtH,UAAWC,IAAEsH,QAEd,kBAAC,EAAD,CACI1C,MAAOsC,EACPjD,aAAckD,EACdhD,QAASiD,EACThD,MAAOA,IAKX,kBAAC,EAAD,CACIrC,KAAG,EACHY,QAASyE,GAFb,WAQA,kBAAC,EAAD,CACIJ,QAASA,EACTH,gBAAiBQ,GAFrB,cAQA,kBAAC,EAAD,CAAeL,QAASA,EAAShD,SAlCxB,SAACU,GAAD,OAAsC2C,EAAW3C,EAAEC,cAAcqC,aAqC9E,6BAKA,+BCzCGO,MAbf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFGC,OARf,WACI,OACI,+BCMOC,OARf,WACI,OACI,+B,oBCSOC,OAVf,WACI,OACI,yBAAK3H,UAAWC,KAAEC,SACd,yBAAKF,UAAWC,KAAE2H,OAAlB,OACA,yBAAK5H,UAAWC,KAAE4H,MAAlB,mBACA,yBAAK7H,UAAWC,KAAE6H,MAAlB,sDCDCC,GACG,cADHA,GAED,UAFCA,GAGK,gBAiBHC,OAdf,WACI,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAU/H,GAAI2H,QACpD,kBAAC,IAAD,CAAOE,KAAMF,GAAiBI,OAAQ,kBAAM,kBAAC,EAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAMF,GAAaI,OAAQ,kBAAM,kBAAC,GAAD,SACxC,kBAAC,IAAD,CAAOF,KAAMF,GAAmBI,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAOA,OAAQ,kBAAM,kBAAC,GAAD,YCLtBC,OAXf,WACI,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,GAAD,SCGDC,OATf,WACI,OACI,yBAAKrI,UAAWC,IAAEoI,KACd,iDACA,kBAAC,GAAD,QCIQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASR,OACL,kBAAC,IAAMS,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhF,GACLsC,QAAQtC,MAAMA,EAAM3D,c","file":"static/js/main.653045e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task__title\":\"Affairs_task__title__kK1r3\",\"task__title_high\":\"Affairs_task__title_high__32cOw\",\"task__title_middle\":\"Affairs_task__title_middle__37fiT\",\"task__title_low\":\"Affairs_task__title_low__zsSfg\",\"task\":\"Affairs_task__1b-zO\",\"task__btn\":\"Affairs_task__btn__2zvu3\",\"wrapper\":\"Affairs_wrapper__2G_cI\",\"filter__btn\":\"Affairs_filter__btn__373mv\",\"btns\":\"Affairs_btns__2h7Za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"navBar_item__2EkUw\",\"wrapper\":\"navBar_wrapper__2E2VQ\",\"active\":\"navBar_active__1H1n1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__BEF6p\",\"error\":\"Greeting_error__2ZxSX\",\"success\":\"Greeting_success__2gGYD\",\"btn\":\"Greeting_btn__11L4J\",\"count\":\"Greeting_count__2yfZF\",\"countNumber\":\"Greeting_countNumber__2ksjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2A1Qv\",\"message__avatar\":\"Message_message__avatar__22I1y\",\"message__title\":\"Message_message__title__3OCmA\",\"message__text\":\"Message_message__text__DuDsR\",\"message__time\":\"Message_message__time__Aq4AK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"notFound_wrapper__3PuOm\",\"title\":\"notFound_title__4KySR\",\"desc\":\"notFound_desc__1RGXq\",\"symb\":\"notFound_symb__1gAZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1yL3y\",\"errorInput\":\"SuperInputText_errorInput__8TCeY\",\"error\":\"SuperInputText_error__3Cy8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-2EYm\",\"red\":\"SuperButton_red__bIs3D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1LKts\",\"spanClassName\":\"SuperCheckbox_spanClassName__3_WwN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__pluKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__nwhV2\",\"column\":\"HW4_column__2fRaG\"};","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport s from \"./styles/navBar.module.css\";\n\nfunction Header() {\n    return (\n        <div className={s.wrapper}>\n            <NavLink className={s.item} to=\"/pre-junior\" activeClassName={s.active}>Pre-Junior</NavLink>\n            <NavLink className={s.item} to=\"/junior\" activeClassName={s.active}>Junior</NavLink>\n            <NavLink className={s.item} to=\"/upper-junior\" activeClassName={s.active}>Upper-Junior</NavLink>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./Message.module.css\";\n\ntype PropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: PropsType) {\n    return (\n        <div className={styles.message}>\n            <img className={styles.message__avatar} src={props.avatar} width=\"50\" height=\"50\" alt=\"Аватар\"></img>\n            <h2 className={styles.message__title}>{props.name}</h2>\n            <p className={styles.message__text}>{props.message}</p>\n            <span className={styles.message__time}>{props.time}</span>\n        </div>\n    );\n}\n\nexport default Message;","import React from \"react\";\n\ntype WordsType = Array<string>;\n\ntype PropsType = {\n    chars: WordsType\n}\n\nfunction AlternativeMessage(props: PropsType) {\n    return (\n        <div>\n            {props.chars.map((char, i) => {\n                return (<span key={i}>{char}</span>)\n            })}\n        </div>\n    );\n}\n\nexport default AlternativeMessage;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport AlternativeMessage from './AlternativeMessage';\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Eugen\",\n    message: \"Hello my dear friend\",\n    time: \"22:00\",\n};\n\nconst altText = [\"H\", \"e\", \"l\", \"l\", \"o\"];\n\nfunction HW1() {\n    return (\n        <div>\n            <hr />\n            homeworks 1\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n            < hr />\n            <AlternativeMessage chars={altText} />\n            <hr />\n        </div>\n    );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport { AffairType } from \"./HW2\";\nimport s from \"./Affairs.module.css\";\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\n\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) };// need to fix\n\n    return (\n        <div className={s.task}>\n            <span className={props.affair.priority === \"high\" ? `${s.task__title} ${s.task__title_high}` :\n                props.affair.priority === \"middle\" ? `${s.task__title} ${s.task__title_middle}` :\n                    props.affair.priority === \"low\" ? `${s.task__title} ${s.task__title_low}` :\n                        `${s.task__title}`}>\n                {props.affair.name}\n            </span>\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport { AffairType, FilterType } from \"./HW2\";\nimport s from \"./Affairs.module.css\";\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => { props.setFilter(\"all\") }; // need to fix\n    const setHigh = () => { props.setFilter(\"high\") };\n    const setMiddle = () => { props.setFilter(\"middle\") };\n    const setLow = () => { props.setFilter(\"low\") };\n\n    return (\n        <div className={s.wrapper}>\n\n            {mappedAffairs}\n\n            <div className={s.btns}>\n                <SuperButton onClick={setAll}>All</SuperButton>\n                <SuperButton onClick={setHigh}>High</SuperButton>\n                <SuperButton onClick={setMiddle}>Middle</SuperButton>\n                <SuperButton onClick={setLow}>Low</SuperButton>\n            </div>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, { useState } from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}; // need to fix any\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    { _id: 1, name: \"React\", priority: \"high\" },\n    { _id: 2, name: \"anime\", priority: \"low\" },\n    { _id: 3, name: \"games\", priority: \"low\" },\n    { _id: 4, name: \"work\", priority: \"high\" },\n    { _id: 5, name: \"html & css\", priority: \"middle\" },\n];\n\n// pure helper functions\nconst filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    const newAffairs = affairs.filter((elem) => {\n        return elem.priority === filter;\n    })\n    return newAffairs;\n}\nconst deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(elem => {\n        return elem._id !== _id\n    }) // need to fix\n}\n\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr />\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr />\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName =`${s.superInput + ' ' + (error ? s.errorInput : className)}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent} from \"react\";\nimport s from './Greeting.module.css';\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\n\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers } // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.success; // need to fix with (?:)\n\n    return (\n        <div className={s.wrapper}>\n            <SuperInputText\n                    value={name}\n                    onChange={setNameCallback}\n                    error={error}\n                />\n            <span>{error}</span>\n            <SuperButton onClick={addUser}>add</SuperButton>\n            <span className={s.count}>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {useState, ChangeEvent} from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>// need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        if (e.currentTarget.value.trim()) {\n            setName(e.currentTarget.value.trim());\n        } else {\n            setName(\"\")\n        }\n    };\n    const addUser = () => {\n        if (name) {\n            addUserCallback(name);\n            alert(`Hello ${name}`);\n            setError(\"\");\n        } else {\n            setError(\"error\");\n        } // need to fix\n    };\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React from \"react\";\nimport { PurchasesType } from \"./HW3\";\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\nimport s from './Greeting.module.css';\n\ntype AlternativeGreetingProps = {\n    purchases: Array<PurchasesType>\n    plusCount: (id: string) => void\n}\n\nconst AlternativeGreeting: React.FC<AlternativeGreetingProps> = ({purchases, plusCount}) => {\n    return (\n        <div>\n            <ul>\n                {\n                    //Вот еще момент, который не очень понял) .map возвращает новый массив\n                    //т.е. функция onAddCountCB, будет грубо говоря в одной из ячеек\n                    // скажем тип [\"const onAddCountCB = () => { plusCount(elem._id) };\", \"<li></li>\"]\n                    // как реакт блин понимает что это функция, как он парсит все это, можно где-то почитать про эту штуку, а то \n                    // беглым взглядом не нашел ответ? Ты в сообщениях также сказал что функции не являются разрешенными\n                    // поэтому не очень понимаю что тут с функцией происходит)\n                    purchases.map(elem => {\n                        const onAddCountCB = () => { plusCount(elem._id) };\n                        return (\n                            <li key={elem._id}>\n                                <span>{elem.name}</span>\n                                <span className={s.countNumber}>{elem.count}</span>\n                                <SuperButton onClick={onAddCountCB}>+</SuperButton>\n                            </li>)\n                    })\n                }\n            </ul>\n\n        </div>\n    );\n}\n\nexport default AlternativeGreeting;\n","import React, { useState } from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport AlternativeGreeting from './AlternativeGreeting';\nimport { v1 } from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\nexport type PurchasesType = {\n    _id: string,\n    name: string,\n    count: number\n}\n\nconst defaultPurchases: Array<PurchasesType> = [{\n    _id: v1(),\n    name: \"Mango\",\n    count: 0\n}, {\n    _id: v1(),\n    name: \"Orange\",\n    count: 0\n}, {\n    _id: v1(),\n    name: \"Lemon\",\n    count: 0\n}]\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n    const [purchases, setPurchases] = useState<Array<PurchasesType>>(defaultPurchases);\n\n    const addUserCallback = (name: string) => { // need to fix any\n        // если делаю так, то все норм, count меняется сразу после того как нажали ок в алерте\n        const newUser = { _id: v1(), name: name };\n        const newUsers = [newUser, ...users];\n\n        // почему если делать так и потом передавать newUsers2 в setUsers, \n        // count не меняется сразу? Т.е. после того как вышел алерт с приветствием и нажали ок,потом надо сделать еще\n        // какое-то действие и только тогда count поменяется?\n        let newUsers2 = users;\n        newUsers2.push({ _id: v1(), name: name });\n\n        setUsers(newUsers); // need to fix\n    }\n\n    const plusCount = (id: string) => {\n        //Вот еще вопрос, почему не срабатывает перерендер?\n        //если смотреть консол лог, то count меняет значение. Но в dom это не попадает\n        //И опять-таки если делать через деструктуризацию, то все поменяется сразу, но мне\n        //непонятно в чем разница)\n        const newPurchases = purchases;\n        newPurchases.forEach((purchase) => {\n            if (purchase._id === id) {\n                purchase.count += 1;\n            }\n        })\n        console.log(newPurchases);\n        setPurchases([...newPurchases]);\n    }\n\n    return (\n        <div>\n            <hr />\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback} />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {<AlternativeGreeting purchases={purchases} plusCount={plusCount}/>}\n            <hr />\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\n\nfunction Junior() {\n    return (\n        <div>\n            {/*<HW6/>*/}\n        </div>\n    );\n}\n\nexport default Junior;","import React from \"react\";\n\nfunction UpperJunior() {\n    return (\n        <div>\n            {/*<HW6/>*/}\n        </div>\n    );\n}\n\nexport default UpperJunior;","import React from \"react\";\nimport s from \"../styles/notFound.module.css\";\n\nfunction Error404() {\n    return (\n        <div className={s.wrapper}>\n            <div className={s.title}>404</div>\n            <div className={s.desc}>Page not found!</div>\n            <div className={s.symb}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport UpperJunior from \"./pages/UpperJunior\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    UPPER_JUNIOR: \"/upper-junior\"\n}\n\nfunction Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR} />} />\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\n                <Route path={PATH.JUNIOR} render={() => <Junior />} />\n                <Route path={PATH.UPPER_JUNIOR} render={() => <UpperJunior />} />\n                <Route render={() => <Error404 />} />\n            </Switch>\n        </div >\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport { HashRouter } from 'react-router-dom';\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter >\n                <Header />\n                <Routes />\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW5 />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}